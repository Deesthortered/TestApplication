<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="file_dialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AAD///8AzMz/AJmZ/wAzM/8AMwD/AAAA/wD//8wA/8zMAMzMzADMmcwAmWbMAGZmzAAzM8wAADPMADMA
        zAAAAMwAzMyZAMyZmQCZmZkAmWaZAGZmmQBmM5kAMzOZAAAzmQAzAJkAAACZAMyZZgCZmWYAZplmAJlm
        ZgBmZmYAZjNmADMzZgAAAGYAmWYzAGZmMwBmMzMAMzMzADMAMwAAADMAMzMAAAAA7gAAAN0AAAC7AAAA
        qgAAAIgAAAB3AAAAVQAAAEQAAAAiAAAAEQAAIgAAABEAALsAAACqAAAARAAAACIAAAARAAAA7u7uAN3d
        3QC7u7sAqqqqAIiIiABVVVUAREREACIiIgAREREAAAAAAMjIyAC/AGYAvTP/ALz/MwC7M/8A4swAAL0z
        /wC8mf8AuzP/AOFmzAC3M/8AtjOZALUz/wC5AGYAtzP/ALb/MwC1M/8A4MwAAPEzzADUmf8A7DPMAP5m
        zADxM8wA1DOZAOwzzAD+AGYAzzPMAM7/MwDNM8wA0cwAAM8zzADOmf8AzTPMAOhmzADPM8wAzjOZAM0z
        zADnAGYAyTPMAMj/MwDHM8wAy8wAAMkzzADImf8AxzPMAOZmzADJM8wAyDOZAMczzADlAGYAwwDMAML/
        MwDBAMwAxcwAAMMAzADCmf8AwQDMAORmzADDAMwAwjOZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0ND
        Q0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQzRD
        NEM0Q0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0M0OUInJy8vMCcyNENDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDNC8s
        KyoEKSkqKywvMkNDQ0NDQ0NDQ0NDQ0NDQ0NDQ0MuDykFKQMpDgQEDQUtMkNDQ0NDQ0NDQ0NDQ0NDQ0M0
        LysqDw8WFhYMFhcqDgQhQ0NDQ0NDQ0NDQ0NDQ0NDQzArLBYIERMGOhEAARQWDxlDQ0NDQ0NDQ0NDQ0ND
        Q0MyLBgUHQAbQz0eQxAHGwc9FkNDQ0NDQ0NDQ0NDQ0NDQy4ZPTpBQDRDQ0NDQzQvDAk8OUNDQ0NDQ0ND
        Q0NDQ0MyLC0HEENDQ0NDQzQyLyssAhtDQ0NDQ0NDQ0NDQ0NDQzAZQEE4Q0NDMiYlJyYtLQoQQkNDQ0ND
        Q0NDQ0NDQ0NDIB8jQ0MlHzwyEABDAQhDEDRDQ0NDQ0NDQ0NDQ0NDQ0M/Hh1AEgAGAAY7AAYABgABJEND
        Q0NDQ0NDQ0NDQ0NDQ0AiEwYREhQ9FRQKFgsUEQAAHkNDQ0NDQ0NDQ0NDQ0NBJB8/FC0rKiopKgMqKioM
        FDw6Q0NDQ0NDQ0NDQ0NDQzkxLS0ZKw8PKiopKQQFAykqFh1CQ0NDQ0NDQ0NDQ0NDQzklL0IxMjExMScv
        LhkpKg4qLEJDQ0NDQ0NDQ0NDQ0NDQyUkNENDQ0NDQ0NDQ0IrKiorMkNDQ0NDQ0NDQ0NDQ0NDKCQlHTwQ
        E0JDOTIxISssLjJDQ0NDQ0NDQ0NDQ0NDQ0MlJB0IBzoAO0FBJCUnMkNDQ0NDQ0NDQ0NDQ0NDQ0NDQ0Ik
        CDsAAAgAHDcjJSQ+HjlDQ0NDQ0NDQ0NDQ0NDQ0NDQz8HAAARNhAJQSUdOwc6CCVDQ0NDQ0NDQ0NDQ0ND
        Q0NDQQAAABE2PBBCHTsROgAAPENDQ0NDQ0NDQ0NDQ0NDQ0M5CAAAOggAPzk9BzoAOxo7QUNDQ0NDQ0ND
        Q0NDQ0NDQ0MlBgAAABtDOQgAAAAdNRI4Q0NDQ0NDQ0NDQ0NDQ0NDQ0MzHh0lQ0NDEjoAABEiHUNDQ0ND
        Q0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0MlBgAAAAhCQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NCHT0bQkND
        Q0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0ND
        Q0NDQ0NDQ0NDQ///////wAH//wAAf/4AAD//AAB//4AAf/+AAH//AAA//wAAP/4AAD/+AAA//gAAP/wA
        AD/8AAB//AAAP/wAAD/8AAA//AAAP/wAAD/+AAA//gAAf/4AAH/+AAB//wAAP/8AAD//gAA//4AAP//A
        AD//4AA////Af///4P//////
</value>
  </data>
</root>